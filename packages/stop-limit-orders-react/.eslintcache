[{"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/rollup.config.js":"1","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/ArgentWalletDetector.d.ts":"2","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Eip2612.d.ts":"3","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/EnsPublicResolver.d.ts":"4","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/EnsRegistrar.d.ts":"5","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Erc20.d.ts":"6","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Erc20Bytes32.d.ts":"7","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Multicall.d.ts":"8","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Multicall2.d.ts":"9","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Unisocks.d.ts":"10","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Weth.d.ts":"11","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/commons.ts":"12","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/index.ts":"13","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Button/index.tsx":"14","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Card/index.tsx":"15","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Column/index.tsx":"16","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/CurrencyInputPanel/FiatValue.tsx":"17","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/CurrencyInputPanel/RatePercentage.tsx":"18","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/CurrencyInputPanel/index.tsx":"19","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/CurrencyLogo/index.tsx":"20","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/DoubleLogo/index.tsx":"21","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/GelatoStopLimitOrder/AppBody.tsx":"22","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/GelatoStopLimitOrder/index.tsx":"23","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/HoverInlineText/index.tsx":"24","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/ListLogo/index.tsx":"25","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Loader/index.tsx":"26","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Logo/index.tsx":"27","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Modal/index.tsx":"28","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/NumericalInput/index.tsx":"29","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Popover/index.tsx":"30","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/QuestionHelper/index.tsx":"31","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Row/index.tsx":"32","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/CommonBases.tsx":"33","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/CurrencyList.tsx":"34","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/CurrencySearch.tsx":"35","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/CurrencySearchModal.tsx":"36","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ImportList.tsx":"37","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ImportRow.tsx":"38","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ImportToken.tsx":"39","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/Manage.tsx":"40","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ManageLists.tsx":"41","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ManageTokens.tsx":"42","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/SortButton.tsx":"43","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/filtering.ts":"44","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/sorting.ts":"45","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/styleds.tsx":"46","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/StopLimitOrdersHistory/ConfirmCancellationModal.tsx":"47","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/StopLimitOrdersHistory/OrderCard/index.tsx":"48","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/StopLimitOrdersHistory/index.tsx":"49","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Toggle/ListToggle.tsx":"50","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Toggle/MultiToggle.tsx":"51","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Toggle/index.tsx":"52","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/TokenWarningModal/index.tsx":"53","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Tooltip/index.tsx":"54","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/TransactionConfirmationModal/index.tsx":"55","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/AdvancedSwapDetails.tsx":"56","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/ConfirmSwapModal.tsx":"57","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/FormattedPriceImpact.tsx":"58","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/Slippage.tsx":"59","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/SwapHeader.tsx":"60","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/SwapModalFooter.tsx":"61","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/SwapModalHeader.tsx":"62","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/SwapRoute.tsx":"63","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/TradePrice.tsx":"64","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/UnsupportedCurrencyFooter.tsx":"65","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/confirmPriceImpactWithoutFee.ts":"66","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/styleds.tsx":"67","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/addresses.ts":"68","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/index.ts":"69","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/lists.ts":"70","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/misc.ts":"71","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/routing.ts":"72","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.avax.ts":"73","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.bsc.ts":"74","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.fantom.ts":"75","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.matic.ts":"76","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.ts":"77","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/custom.d.ts":"78","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/entities/errors.ts":"79","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/entities/pair.ts":"80","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/Balances.ts":"81","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/Tokens.ts":"82","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/index.ts":"83","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrders.ts":"84","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersHandlers.ts":"85","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersHistory.ts":"86","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersLib.ts":"87","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useAllCurrencyCombinations.ts":"88","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useApproveCallback.ts":"89","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useColor.ts":"90","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useContract.ts":"91","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useDebounce.ts":"92","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useDebouncedChangeHandler.tsx":"93","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useFetchListCallback.ts":"94","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useGasOverhead.ts":"95","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useGasPrice.ts":"96","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useHttpLocations.ts":"97","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useInterval.ts":"98","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useIsArgentWallet.ts":"99","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useIsSwapUnsupported.ts":"100","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useIsWindowVisible.ts":"101","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useLast.ts":"102","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useOnClickOutside.tsx":"103","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/usePairs.ts":"104","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/usePrevious.ts":"105","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useTheme.ts":"106","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useToggle.ts":"107","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useTokenAllowance.ts":"108","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useTrade.ts":"109","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useUSDCPrice.ts":"110","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useWindowSize.ts":"111","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/index.tsx":"112","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gapplication/actions.ts":"113","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gapplication/hooks.ts":"114","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gapplication/reducer.ts":"115","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gapplication/updater.ts":"116","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/actions.ts":"117","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/hooks.ts":"118","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/reducer.ts":"119","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/updater.ts":"120","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/wrappedTokenInfo.ts":"121","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gmulticall/actions.ts":"122","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gmulticall/hooks.ts":"123","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gmulticall/reducer.ts":"124","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gmulticall/updater.tsx":"125","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gstoplimit/actions.ts":"126","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gstoplimit/hooks.ts":"127","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gstoplimit/reducer.ts":"128","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gtransactions/actions.ts":"129","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gtransactions/hooks.tsx":"130","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gtransactions/reducer.ts":"131","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gtransactions/updater.tsx":"132","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/guser/actions.ts":"133","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/guser/hooks.ts":"134","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/guser/reducer.ts":"135","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/index.ts":"136","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/theme/components.tsx":"137","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/theme/index.tsx":"138","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/theme/styled.d.ts":"139","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/types/index.ts":"140","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/chunkArray.ts":"141","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/computeFiatValuePriceImpact.tsx":"142","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/constructSameAddressMap.ts":"143","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/contenthashToUri.ts":"144","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/currencyId.ts":"145","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/formatTokenAmount.ts":"146","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/getExplorerLink.ts":"147","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/getTokenList.ts":"148","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/index.ts":"149","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/isTradeBetter.ts":"150","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/isZero.ts":"151","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/listVersionLabel.ts":"152","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/localStorageOrders.ts":"153","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/maxAmountSpend.ts":"154","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/pairs.ts":"155","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/parseENSAddress.ts":"156","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/prices.ts":"157","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/resolveENSContentHash.ts":"158","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/retry.ts":"159","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/supportedChainId.ts":"160","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/unwrappedToken.ts":"161","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/uriToHttp.ts":"162","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/web3/index.tsx":"163"},{"size":1791,"mtime":1637849940905,"results":"164","hashOfConfig":"165"},{"size":11386,"mtime":1637849940906,"results":"166","hashOfConfig":"165"},{"size":3903,"mtime":1637849940906,"results":"167","hashOfConfig":"165"},{"size":27308,"mtime":1637849940906,"results":"168","hashOfConfig":"165"},{"size":16035,"mtime":1637849940907,"results":"169","hashOfConfig":"165"},{"size":10097,"mtime":1637849940907,"results":"170","hashOfConfig":"165"},{"size":3691,"mtime":1637849940907,"results":"171","hashOfConfig":"165"},{"size":14659,"mtime":1637849940907,"results":"172","hashOfConfig":"165"},{"size":13936,"mtime":1637849940907,"results":"173","hashOfConfig":"165"},{"size":21486,"mtime":1637849940907,"results":"174","hashOfConfig":"165"},{"size":12010,"mtime":1637849940907,"results":"175","hashOfConfig":"165"},{"size":888,"mtime":1637849940907,"results":"176","hashOfConfig":"165"},{"size":578,"mtime":1637849940907,"results":"177","hashOfConfig":"165"},{"size":11283,"mtime":1637849940910,"results":"178","hashOfConfig":"165"},{"size":1518,"mtime":1637849940910,"results":"179","hashOfConfig":"165"},{"size":706,"mtime":1637849940910,"results":"180","hashOfConfig":"165"},{"size":1312,"mtime":1637849940910,"results":"181","hashOfConfig":"165"},{"size":1471,"mtime":1637849940910,"results":"182","hashOfConfig":"165"},{"size":15235,"mtime":1637849940911,"results":"183","hashOfConfig":"165"},{"size":3152,"mtime":1637849940911,"results":"184","hashOfConfig":"165"},{"size":1220,"mtime":1637849940911,"results":"185","hashOfConfig":"165"},{"size":731,"mtime":1637849940912,"results":"186","hashOfConfig":"165"},{"size":21341,"mtime":1637849940912,"results":"187","hashOfConfig":"165"},{"size":1594,"mtime":1637849940912,"results":"188","hashOfConfig":"165"},{"size":592,"mtime":1637849940912,"results":"189","hashOfConfig":"165"},{"size":1164,"mtime":1637849940912,"results":"190","hashOfConfig":"165"},{"size":972,"mtime":1637849940912,"results":"191","hashOfConfig":"165"},{"size":4386,"mtime":1637849940913,"results":"192","hashOfConfig":"165"},{"size":2764,"mtime":1637849940913,"results":"193","hashOfConfig":"165"},{"size":3232,"mtime":1637849940913,"results":"194","hashOfConfig":"165"},{"size":2166,"mtime":1637849940913,"results":"195","hashOfConfig":"165"},{"size":1151,"mtime":1637849940913,"results":"196","hashOfConfig":"165"},{"size":2057,"mtime":1637849940913,"results":"197","hashOfConfig":"165"},{"size":7820,"mtime":1637849940913,"results":"198","hashOfConfig":"165"},{"size":7893,"mtime":1637849940913,"results":"199","hashOfConfig":"165"},{"size":3825,"mtime":1637849940913,"results":"200","hashOfConfig":"165"},{"size":6291,"mtime":1637849940914,"results":"201","hashOfConfig":"165"},{"size":2994,"mtime":1637849940914,"results":"202","hashOfConfig":"165"},{"size":5505,"mtime":1637849940914,"results":"203","hashOfConfig":"165"},{"size":2774,"mtime":1637849940914,"results":"204","hashOfConfig":"165"},{"size":12767,"mtime":1637849940914,"results":"205","hashOfConfig":"165"},{"size":5240,"mtime":1637849940914,"results":"206","hashOfConfig":"165"},{"size":723,"mtime":1637849940914,"results":"207","hashOfConfig":"165"},{"size":2453,"mtime":1637849940914,"results":"208","hashOfConfig":"165"},{"size":1793,"mtime":1637849940915,"results":"209","hashOfConfig":"165"},{"size":2919,"mtime":1637849940915,"results":"210","hashOfConfig":"165"},{"size":2464,"mtime":1637849940915,"results":"211","hashOfConfig":"165"},{"size":19206,"mtime":1637849940915,"results":"212","hashOfConfig":"165"},{"size":6494,"mtime":1637849940916,"results":"213","hashOfConfig":"165"},{"size":1466,"mtime":1637849940916,"results":"214","hashOfConfig":"165"},{"size":1765,"mtime":1637849940916,"results":"215","hashOfConfig":"165"},{"size":1935,"mtime":1637849940916,"results":"216","hashOfConfig":"165"},{"size":515,"mtime":1637849940916,"results":"217","hashOfConfig":"165"},{"size":1801,"mtime":1637849940916,"results":"218","hashOfConfig":"165"},{"size":6579,"mtime":1637849940916,"results":"219","hashOfConfig":"165"},{"size":6253,"mtime":1637849940917,"results":"220","hashOfConfig":"165"},{"size":2952,"mtime":1637849940917,"results":"221","hashOfConfig":"165"},{"size":871,"mtime":1637849940917,"results":"222","hashOfConfig":"165"},{"size":4787,"mtime":1637849940917,"results":"223","hashOfConfig":"165"},{"size":1708,"mtime":1637849940917,"results":"224","hashOfConfig":"165"},{"size":1018,"mtime":1637849940917,"results":"225","hashOfConfig":"165"},{"size":7561,"mtime":1637849940918,"results":"226","hashOfConfig":"165"},{"size":1200,"mtime":1637849940918,"results":"227","hashOfConfig":"165"},{"size":1828,"mtime":1637849940918,"results":"228","hashOfConfig":"165"},{"size":3795,"mtime":1637849940918,"results":"229","hashOfConfig":"165"},{"size":1016,"mtime":1637849940918,"results":"230","hashOfConfig":"165"},{"size":4369,"mtime":1637849940918,"results":"231","hashOfConfig":"165"},{"size":2130,"mtime":1637849940918,"results":"232","hashOfConfig":"165"},{"size":3925,"mtime":1637849940918,"results":"233","hashOfConfig":"165"},{"size":2328,"mtime":1637849940918,"results":"234","hashOfConfig":"165"},{"size":1786,"mtime":1637849940918,"results":"235","hashOfConfig":"165"},{"size":3996,"mtime":1637849940918,"results":"236","hashOfConfig":"165"},{"size":494,"mtime":1637849940918,"results":"237","hashOfConfig":"165"},{"size":633,"mtime":1637849940919,"results":"238","hashOfConfig":"165"},{"size":1082,"mtime":1637849940919,"results":"239","hashOfConfig":"165"},{"size":1063,"mtime":1637849940919,"results":"240","hashOfConfig":"165"},{"size":4466,"mtime":1637849940919,"results":"241","hashOfConfig":"165"},{"size":725,"mtime":1637849940919,"results":"242","hashOfConfig":"165"},{"size":1079,"mtime":1637849940919,"results":"243","hashOfConfig":"165"},{"size":9680,"mtime":1637849940919,"results":"244","hashOfConfig":"165"},{"size":5481,"mtime":1637849940919,"results":"245","hashOfConfig":"165"},{"size":10660,"mtime":1637849940919,"results":"246","hashOfConfig":"165"},{"size":342,"mtime":1637849940920,"results":"247","hashOfConfig":"165"},{"size":686,"mtime":1637849940920,"results":"248","hashOfConfig":"165"},{"size":6550,"mtime":1637849940920,"results":"249","hashOfConfig":"165"},{"size":8191,"mtime":1637849940920,"results":"250","hashOfConfig":"165"},{"size":769,"mtime":1637849940921,"results":"251","hashOfConfig":"165"},{"size":2597,"mtime":1637849940921,"results":"252","hashOfConfig":"165"},{"size":4239,"mtime":1637849940921,"results":"253","hashOfConfig":"165"},{"size":2148,"mtime":1637849940921,"results":"254","hashOfConfig":"165"},{"size":3532,"mtime":1637849940921,"results":"255","hashOfConfig":"165"},{"size":719,"mtime":1637849940921,"results":"256","hashOfConfig":"165"},{"size":1157,"mtime":1637849940921,"results":"257","hashOfConfig":"165"},{"size":1764,"mtime":1637849940922,"results":"258","hashOfConfig":"165"},{"size":3415,"mtime":1637849940922,"results":"259","hashOfConfig":"165"},{"size":930,"mtime":1637849940922,"results":"260","hashOfConfig":"165"},{"size":234,"mtime":1637849940922,"results":"261","hashOfConfig":"165"},{"size":645,"mtime":1637849940922,"results":"262","hashOfConfig":"165"},{"size":669,"mtime":1637849940922,"results":"263","hashOfConfig":"165"},{"size":888,"mtime":1637849940922,"results":"264","hashOfConfig":"165"},{"size":798,"mtime":1637849940922,"results":"265","hashOfConfig":"165"},{"size":1046,"mtime":1637849940922,"results":"266","hashOfConfig":"165"},{"size":718,"mtime":1637849940922,"results":"267","hashOfConfig":"165"},{"size":2608,"mtime":1637849940922,"results":"268","hashOfConfig":"165"},{"size":550,"mtime":1637849940923,"results":"269","hashOfConfig":"165"},{"size":189,"mtime":1637849940923,"results":"270","hashOfConfig":"165"},{"size":278,"mtime":1637849940923,"results":"271","hashOfConfig":"165"},{"size":1031,"mtime":1637849940923,"results":"272","hashOfConfig":"165"},{"size":4613,"mtime":1637849940923,"results":"273","hashOfConfig":"165"},{"size":3593,"mtime":1637849940923,"results":"274","hashOfConfig":"165"},{"size":687,"mtime":1637849940923,"results":"275","hashOfConfig":"165"},{"size":3404,"mtime":1637941559896,"results":"276","hashOfConfig":"165"},{"size":279,"mtime":1637849940923,"results":"277","hashOfConfig":"165"},{"size":386,"mtime":1637849940923,"results":"278","hashOfConfig":"165"},{"size":957,"mtime":1637849940924,"results":"279","hashOfConfig":"165"},{"size":2109,"mtime":1637849940924,"results":"280","hashOfConfig":"165"},{"size":1215,"mtime":1637849940924,"results":"281","hashOfConfig":"165"},{"size":4243,"mtime":1637849940924,"results":"282","hashOfConfig":"165"},{"size":4703,"mtime":1637849940924,"results":"283","hashOfConfig":"165"},{"size":6603,"mtime":1637849940924,"results":"284","hashOfConfig":"165"},{"size":2306,"mtime":1637849940924,"results":"285","hashOfConfig":"165"},{"size":2024,"mtime":1637849940924,"results":"286","hashOfConfig":"165"},{"size":8790,"mtime":1637849940924,"results":"287","hashOfConfig":"165"},{"size":4332,"mtime":1637849940924,"results":"288","hashOfConfig":"165"},{"size":9438,"mtime":1637849940924,"results":"289","hashOfConfig":"165"},{"size":780,"mtime":1637849940925,"results":"290","hashOfConfig":"165"},{"size":10829,"mtime":1637849940925,"results":"291","hashOfConfig":"165"},{"size":2832,"mtime":1637849940925,"results":"292","hashOfConfig":"165"},{"size":1107,"mtime":1637849940925,"results":"293","hashOfConfig":"165"},{"size":3312,"mtime":1637849940925,"results":"294","hashOfConfig":"165"},{"size":2988,"mtime":1637849940926,"results":"295","hashOfConfig":"165"},{"size":2881,"mtime":1637849940926,"results":"296","hashOfConfig":"165"},{"size":782,"mtime":1637849940926,"results":"297","hashOfConfig":"165"},{"size":5432,"mtime":1637849940926,"results":"298","hashOfConfig":"165"},{"size":2602,"mtime":1637849940926,"results":"299","hashOfConfig":"165"},{"size":710,"mtime":1637849940926,"results":"300","hashOfConfig":"165"},{"size":6109,"mtime":1637849940926,"results":"301","hashOfConfig":"165"},{"size":6352,"mtime":1637849940926,"results":"302","hashOfConfig":"165"},{"size":1449,"mtime":1637849940926,"results":"303","hashOfConfig":"165"},{"size":624,"mtime":1637849940926,"results":"304","hashOfConfig":"165"},{"size":1357,"mtime":1637849940927,"results":"305","hashOfConfig":"165"},{"size":714,"mtime":1637849940927,"results":"306","hashOfConfig":"165"},{"size":211,"mtime":1637849940927,"results":"307","hashOfConfig":"165"},{"size":1456,"mtime":1637849940927,"results":"308","hashOfConfig":"165"},{"size":233,"mtime":1637849940927,"results":"309","hashOfConfig":"165"},{"size":728,"mtime":1637849940927,"results":"310","hashOfConfig":"165"},{"size":1199,"mtime":1637849940927,"results":"311","hashOfConfig":"165"},{"size":2602,"mtime":1637849940927,"results":"312","hashOfConfig":"165"},{"size":6706,"mtime":1637849940927,"results":"313","hashOfConfig":"165"},{"size":1161,"mtime":1637849940927,"results":"314","hashOfConfig":"165"},{"size":186,"mtime":1637849940927,"results":"315","hashOfConfig":"165"},{"size":184,"mtime":1637849940927,"results":"316","hashOfConfig":"165"},{"size":4004,"mtime":1637849940928,"results":"317","hashOfConfig":"165"},{"size":812,"mtime":1637849940928,"results":"318","hashOfConfig":"165"},{"size":7103,"mtime":1637849940928,"results":"319","hashOfConfig":"165"},{"size":352,"mtime":1637849940928,"results":"320","hashOfConfig":"165"},{"size":2346,"mtime":1637849940928,"results":"321","hashOfConfig":"165"},{"size":1748,"mtime":1637849940928,"results":"322","hashOfConfig":"165"},{"size":1880,"mtime":1637849940928,"results":"323","hashOfConfig":"165"},{"size":380,"mtime":1637849940928,"results":"324","hashOfConfig":"165"},{"size":421,"mtime":1637849940928,"results":"325","hashOfConfig":"165"},{"size":873,"mtime":1637849940928,"results":"326","hashOfConfig":"165"},{"size":1543,"mtime":1637849940928,"results":"327","hashOfConfig":"165"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tshbsk",{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/rollup.config.js",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/ArgentWalletDetector.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Eip2612.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/EnsPublicResolver.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/EnsRegistrar.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Erc20.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Erc20Bytes32.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Multicall.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Multicall2.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Unisocks.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/Weth.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/commons.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/abis/types/index.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Button/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Card/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Column/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/CurrencyInputPanel/FiatValue.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/CurrencyInputPanel/RatePercentage.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/CurrencyInputPanel/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/CurrencyLogo/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/DoubleLogo/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/GelatoStopLimitOrder/AppBody.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/GelatoStopLimitOrder/index.tsx",["658","659"],"/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  Currency,\n  CurrencyAmount,\n  Percent,\n  TradeType,\n} from \"@uniswap/sdk-core\";\nimport { Trade } from \"@uniswap/v2-sdk\";\nimport { AdvancedSwapDetails } from \"../order/AdvancedSwapDetails\";\nimport UnsupportedCurrencyFooter from \"../order/UnsupportedCurrencyFooter\";\nimport { MouseoverTooltip, MouseoverTooltipContent } from \"../Tooltip\";\nimport React, { useCallback, useState, Fragment, useEffect } from \"react\";\nimport {\n  ArrowDown,\n  Info,\n  Divide,\n  X,\n  CheckCircle,\n  HelpCircle,\n} from \"react-feather\";\nimport { Text } from \"rebass\";\nimport styled from \"styled-components\";\nimport {\n  ButtonConfirmed,\n  ButtonError,\n  ButtonLight,\n  ButtonPrimary,\n} from \"../Button\";\nimport { GreyCard } from \"../Card\";\nimport { AutoColumn } from \"../Column\";\nimport CurrencyInputPanel from \"../CurrencyInputPanel\";\nimport Row, { AutoRow, RowFixed } from \"../Row\";\nimport ConfirmSwapModal from \"../order/ConfirmSwapModal\";\nimport {\n  ArrowWrapper,\n  BottomGrouping,\n  Dots,\n  SwapCallbackError,\n  Wrapper,\n} from \"../order/styleds\";\nimport { SwapHeader } from \"../order/SwapHeader\";\nimport TradePrice from \"../order/TradePrice\";\nimport { useGelatoStopLimitOrders } from \"../../hooks/gelato\";\nimport { useIsSwapUnsupported } from \"../../hooks/useIsSwapUnsupported\";\nimport { useUSDCValue } from \"../../hooks/useUSDCPrice\";\nimport { Field } from \"../../state/gstoplimit/actions\";\nimport { tryParseAmount } from \"../../state/gstoplimit/hooks\";\nimport { maxAmountSpend } from \"../../utils/maxAmountSpend\";\nimport AppBody from \"./AppBody\";\nimport { ExternalLink, TYPE } from \"../../theme\";\nimport { useWeb3 } from \"../../web3\";\nimport useTheme from \"../../hooks/useTheme\";\nimport useGasOverhead from \"../../hooks/useGasOverhead\";\nimport PoweredByGelato from \"../../assets/svg/poweredbygelato_transparent.svg\";\nimport {\n  ApprovalState,\n  useApproveCallbackFromInputCurrencyAmount,\n} from \"../../hooks/useApproveCallback\";\nimport Loader from \"../Loader\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport { NATIVE } from \"../../constants/addresses\";\nimport Slippage from \"../order/Slippage\";\n\nconst StyledInfo = styled(Info)`\n  opacity: 0.4;\n  color: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  :hover {\n    opacity: 0.8;\n  }\n`;\n\nenum Rate {\n  DIV = \"DIV\",\n  MUL = \"MUL\",\n}\n\nconst PoweredByWrapper = styled(PoweredByGelato)<{ size: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  height: ${() => \"26px\"};\n  width: ${({ size }) => (size ? size + \"px\" : \"32px\")};\n  background-color: ${({ theme }) => theme.bg1};\n  & > img,\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n  border-radius: 0.5rem;       \n  margin-left: 0.25rem;\n`;\n\ninterface GelatoStopLimitOrderProps {\n  showCommonBases?: boolean;\n}\n\nexport default function GelatoStopLimitOrder({\n  showCommonBases = true,\n}: GelatoStopLimitOrderProps) {\n  const { account, toggleWalletModal } = useWeb3();\n\n  const theme = useTheme();\n\n  const recipient = account ?? null;\n\n  const {\n    handlers: {\n      handleInput,\n      handleCurrencySelection,\n      handleSwitchTokens,\n      handleStopLimitOrderSubmission,\n      handleSlippage,\n    },\n    derivedOrderInfo: {\n      parsedAmounts,\n      currencies,\n      currencyBalances,\n      trade,\n      formattedAmounts,\n      inputError,\n      rawAmounts,\n      price,\n      slippage,\n    },\n    orderState: { independentField, rateType },\n  } = useGelatoStopLimitOrders();\n\n  const fiatValueInput = useUSDCValue(parsedAmounts.input);\n\n  const desiredRateInCurrencyAmount = tryParseAmount(\n    trade?.outputAmount.toSignificant(6),\n    currencies.output\n  );\n\n  const fiatValueDesiredRate = useUSDCValue(desiredRateInCurrencyAmount);\n\n  const currentMarketRate = trade?.executionPrice ?? undefined;\n\n  const pct =\n    currentMarketRate && price\n      ? price.subtract(currentMarketRate).divide(currentMarketRate)\n      : undefined;\n\n  const percentageRateDifference = pct\n    ? new Percent(pct.numerator, pct.denominator)\n    : undefined;\n\n  const isValid = !inputError;\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      handleInput(Field.INPUT, value);\n    },\n    [handleInput]\n  );\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      handleInput(Field.OUTPUT, value);\n    },\n    [handleInput]\n  );\n  const handleTypeDesiredRate = useCallback(\n    (value: string) => {\n      handleInput(Field.PRICE, value);\n    },\n    [handleInput]\n  );\n\n  // modal and loading\n  const [\n    { showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash },\n    setSwapState,\n  ] = useState<{\n    showConfirm: boolean;\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const [\n    approvalState,\n    approveCallback,\n  ] = useApproveCallbackFromInputCurrencyAmount(parsedAmounts.input);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approvalState, approvalSubmitted]);\n\n  const allowedSlippage = new Percent(slippage, 10_000);\n  const userHasSpecifiedInputOutput = Boolean(\n    (independentField === Field.INPUT || independentField === Field.OUTPUT) &&\n      currencies.input &&\n      currencies.output\n  );\n  const routeNotFound = !trade?.route;\n  const isLoadingRoute =\n    parsedAmounts.input &&\n    !parsedAmounts.output &&\n    currencies.input &&\n    currencies.output;\n\n  const maxInputAmount: CurrencyAmount<Currency> | undefined = maxAmountSpend(\n    currencyBalances.input\n  );\n  const showMaxButton = Boolean(\n    maxInputAmount?.greaterThan(0) &&\n      !parsedAmounts.input?.equalTo(maxInputAmount)\n  );\n\n  const handleSwap = useCallback(() => {\n    if (!handleStopLimitOrderSubmission) {\n      return;\n    }\n\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined,\n    });\n\n    try {\n      if (!currencies.input?.wrapped.address) {\n        throw new Error(\"Invalid input currency\");\n      }\n\n      if (!currencies.output?.wrapped.address) {\n        throw new Error(\"Invalid output currency\");\n      }\n\n      if (!rawAmounts.input) {\n        throw new Error(\"Invalid input amount\");\n      }\n\n      if (!rawAmounts.output) {\n        throw new Error(\"Invalid output amount\");\n      }\n\n      if (!account) {\n        throw new Error(\"No account\");\n      }\n\n      handleStopLimitOrderSubmission({\n        inputToken: currencies.input?.isNative\n          ? NATIVE\n          : currencies.input?.wrapped.address,\n        outputToken: currencies.output?.isNative\n          ? NATIVE\n          : currencies.output?.wrapped.address,\n        inputAmount: rawAmounts.input,\n        outputAmount: rawAmounts.output,\n        slippage,\n        owner: account,\n      })\n        .then(({ hash }) => {\n          setSwapState({\n            attemptingTxn: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: undefined,\n            txHash: hash,\n          });\n        })\n        .catch((error) => {\n          setSwapState({\n            attemptingTxn: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: error.message,\n            txHash: undefined,\n          });\n        });\n    } catch (error: any) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined,\n      });\n    }\n  }, [\n    handleStopLimitOrderSubmission,\n    tradeToConfirm,\n    showConfirm,\n    currencies.input?.wrapped.address,\n    currencies.input?.isNative,\n    currencies.output?.wrapped.address,\n    currencies.output?.isNative,\n    rawAmounts.input,\n    rawAmounts.output,\n    account,\n  ]);\n\n  const [showInverted, setShowInverted] = useState<boolean>(false);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash,\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      handleInput(Field.INPUT, \"\");\n    }\n  }, [attemptingTxn, handleInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: trade as any,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm,\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      //  setApprovalSubmitted(false); // reset 2 step UI for approvals\n      handleCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [handleCurrencySelection]\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxInputAmount && handleInput(Field.INPUT, maxInputAmount.toExact());\n  }, [maxInputAmount, handleInput]);\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => handleCurrencySelection(Field.OUTPUT, outputCurrency),\n    [handleCurrencySelection]\n  );\n\n  const swapIsUnsupported = useIsSwapUnsupported(\n    currencies?.input,\n    currencies?.output\n  );\n\n  const {\n    gasPrice,\n    realExecutionPrice,\n    realExecutionPriceAsString,\n  } = useGasOverhead(parsedAmounts.input, parsedAmounts.output, rateType);\n\n  const showApproveFlow =\n    !inputError &&\n    (approvalState === ApprovalState.NOT_APPROVED ||\n      approvalState === ApprovalState.PENDING ||\n      (approvalSubmitted && approvalState === ApprovalState.APPROVED));\n\n  const handleApprove = useCallback(async () => {\n    await approveCallback();\n  }, [approveCallback]);\n\n  const [activeTab, setActiveTab] = useState(1);\n  const [slippageValue, setSlippage] = useState(\"2\");\n\n  const handleSlippageInput = (value: string) => {\n    handleSlippage(value);\n    setSlippage(value);\n  };\n\n  useEffect(() => {\n    setActiveTab(1);\n    handleSlippageInput(\"2\");\n  }, []);\n\n  return (\n    <Fragment>\n      <AppBody>\n        <SwapHeader />\n        <Wrapper id=\"limit-order-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n            inputAmount={parsedAmounts.input}\n            outputAmount={parsedAmounts.output}\n          />\n\n          <AutoColumn gap={\"md\"}>\n            <div style={{ display: \"relative\" }}>\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT ? \"From (at most)\" : \"From\"\n                }\n                value={formattedAmounts.input}\n                showMaxButton={showMaxButton}\n                currency={currencies.input}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                fiatValue={fiatValueInput ?? undefined}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies.output}\n                showCommonBases={showCommonBases}\n                id=\"limit-order-currency-input\"\n              />\n              <ArrowWrapper clickable={false}>\n                {rateType === Rate.MUL ? (\n                  <X\n                    size=\"16\"\n                    color={\n                      currencies.input && currencies.output\n                        ? theme.text1\n                        : theme.text3\n                    }\n                  />\n                ) : (\n                  <Divide\n                    size=\"16\"\n                    color={\n                      currencies.input && currencies.output\n                        ? theme.text1\n                        : theme.text3\n                    }\n                  />\n                )}\n              </ArrowWrapper>\n              <CurrencyInputPanel\n                value={formattedAmounts.price}\n                showMaxButton={showMaxButton}\n                currency={currencies.input}\n                onUserInput={handleTypeDesiredRate}\n                fiatValue={fiatValueDesiredRate ?? undefined}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies.output}\n                showCommonBases={showCommonBases}\n                id=\"limit-order-currency-rate\"\n                showCurrencySelector={false}\n                hideBalance={true}\n                showRate={true}\n                isInvertedRate={rateType === Rate.MUL ? false : true}\n                gasPrice={gasPrice}\n                realExecutionPrice={realExecutionPrice ?? undefined}\n                realExecutionPriceAsString={realExecutionPriceAsString}\n              />\n              <ArrowWrapper clickable>\n                <ArrowDown\n                  size=\"16\"\n                  onClick={() => {\n                    //   setApprovalSubmitted(false); // reset 2 step UI for approvals\n                    handleSwitchTokens();\n                  }}\n                  color={\n                    currencies.input && currencies.output\n                      ? theme.text1\n                      : theme.text3\n                  }\n                />\n              </ArrowWrapper>\n              <CurrencyInputPanel\n                value={formattedAmounts.output}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT ? \"To (at least)\" : \"To\"\n                }\n                showMaxButton={false}\n                hideBalance={false}\n                priceImpact={percentageRateDifference}\n                currency={currencies.output}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies.input}\n                showCommonBases={showCommonBases}\n                rateType={rateType}\n                id=\"limit-order-currency-output\"\n              />\n              <Row>\n                <Slippage\n                  handleActiveTab={setActiveTab}\n                  activeTab={activeTab}\n                  value={slippageValue}\n                  handleInput={handleSlippageInput}\n                />\n              </Row>\n            </div>\n\n            <Row\n              style={{ justifyContent: !trade ? \"center\" : \"space-between\" }}\n            >\n              <RowFixed>\n                <ExternalLink href={\"https://www.gelato.network\"}>\n                  <PoweredByWrapper size={126} />\n                </ExternalLink>\n              </RowFixed>\n              {trade ? (\n                <RowFixed>\n                  {/* Current market rate */}\n                  <TradePrice\n                    price={trade.executionPrice}\n                    showInverted={showInverted}\n                    setShowInverted={setShowInverted}\n                  />\n                  <MouseoverTooltipContent content={<AdvancedSwapDetails />}>\n                    <StyledInfo />\n                  </MouseoverTooltipContent>\n                </RowFixed>\n              ) : null}\n            </Row>\n\n            <BottomGrouping>\n              {swapIsUnsupported ? (\n                <ButtonPrimary disabled={true}>\n                  <TYPE.main mb=\"4px\">Unsupported Asset</TYPE.main>\n                </ButtonPrimary>\n              ) : !account ? (\n                <ButtonLight onClick={toggleWalletModal}>\n                  Connect Wallet\n                </ButtonLight>\n              ) : routeNotFound &&\n                userHasSpecifiedInputOutput &&\n                parsedAmounts.input ? (\n                <GreyCard style={{ textAlign: \"center\" }}>\n                  <TYPE.main mb=\"4px\">\n                    {isLoadingRoute ? (\n                      <Dots>Loading</Dots>\n                    ) : (\n                      `Insufficient liquidity for this trade.`\n                    )}\n                  </TYPE.main>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <AutoRow style={{ flexWrap: \"nowrap\", width: \"100%\" }}>\n                  <AutoColumn style={{ width: \"100%\" }} gap=\"12px\">\n                    <ButtonConfirmed\n                      onClick={handleApprove}\n                      disabled={\n                        approvalState !== ApprovalState.NOT_APPROVED ||\n                        approvalSubmitted\n                      }\n                      width=\"100%\"\n                      altDisabledStyle={approvalState === ApprovalState.PENDING} // show solid button while waiting\n                      confirmed={approvalState === ApprovalState.APPROVED}\n                    >\n                      <AutoRow\n                        justify=\"space-between\"\n                        style={{ flexWrap: \"nowrap\" }}\n                      >\n                        <span style={{ display: \"flex\", alignItems: \"center\" }}>\n                          <CurrencyLogo\n                            currency={currencies.input}\n                            size={\"20px\"}\n                            style={{ marginRight: \"8px\", flexShrink: 0 }}\n                          />\n                          {/* we need to shorten this string on mobile */}\n                          {approvalState === ApprovalState.APPROVED\n                            ? `You can now use your ${currencies.input?.symbol} to place orders.`\n                            : `Allow the Gelato Stop Limit Orders to use your \n                              ${currencies.input?.symbol}`}\n                        </span>\n                        {approvalState === ApprovalState.PENDING ||\n                        (approvalSubmitted &&\n                          approvalState === ApprovalState.NOT_APPROVED) ? (\n                          <Loader stroke=\"white\" />\n                        ) : approvalSubmitted &&\n                          approvalState === ApprovalState.APPROVED ? (\n                          <CheckCircle size=\"20\" color={theme.green1} />\n                        ) : (\n                          <MouseoverTooltip\n                            text={`You must give the Gelato Stop Limit Orders smart contracts\n                                permission to use your \n                                ${currencies.input?.symbol}. You only have to do\n                                this once per token.`}\n                          >\n                            <HelpCircle\n                              size=\"20\"\n                              color={\"white\"}\n                              style={{ marginLeft: \"8px\" }}\n                            />\n                          </MouseoverTooltip>\n                        )}\n                      </AutoRow>\n                    </ButtonConfirmed>\n                    <ButtonError\n                      onClick={() => {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        });\n                      }}\n                      id=\"limit-order-button\"\n                      disabled={\n                        !isValid || approvalState !== ApprovalState.APPROVED\n                      }\n                      error={false}\n                    >\n                      <Text fontSize={20} fontWeight={500}>\n                        {inputError ? inputError : `Place order`}\n                      </Text>\n                    </ButtonError>\n                  </AutoColumn>\n                </AutoRow>\n              ) : (\n                <ButtonError\n                  onClick={() => {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined,\n                    });\n                  }}\n                  id=\"stop-limit-order-button\"\n                  disabled={!isValid}\n                  error={false}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {inputError ? inputError : `Place order`}\n                  </Text>\n                </ButtonError>\n              )}\n              {swapErrorMessage && isValid ? (\n                <SwapCallbackError error={swapErrorMessage} />\n              ) : null}\n            </BottomGrouping>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {!swapIsUnsupported ? null : (\n        <UnsupportedCurrencyFooter\n          show={swapIsUnsupported}\n          currencies={[currencies.input, currencies.output]}\n        />\n      )}\n    </Fragment>\n  );\n}\n","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/HoverInlineText/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/ListLogo/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Loader/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Logo/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Modal/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/NumericalInput/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Popover/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/QuestionHelper/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Row/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/CommonBases.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/CurrencyList.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/CurrencySearch.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/CurrencySearchModal.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ImportList.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ImportRow.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ImportToken.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/Manage.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ManageLists.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/ManageTokens.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/SortButton.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/filtering.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/sorting.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/SearchModal/styleds.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/StopLimitOrdersHistory/ConfirmCancellationModal.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/StopLimitOrdersHistory/OrderCard/index.tsx",["660","661"],"import React, { useCallback, useMemo, useState } from \"react\";\nimport styled, { DefaultTheme } from \"styled-components/macro\";\nimport { darken } from \"polished\";\nimport { ArrowRight } from \"react-feather\";\nimport { Text } from \"rebass\";\nimport { RowBetween } from \"../../Row\";\nimport { StopLimitOrder } from \"@gelatonetwork/limit-orders-lib\";\nimport useTheme from \"../../../hooks/useTheme\";\nimport { useCurrency } from \"../../../hooks/Tokens\";\nimport CurrencyLogo from \"../../CurrencyLogo\";\nimport { useGelatoStopLimitOrdersHandlers } from \"../../../hooks/gelato\";\nimport { CurrencyAmount, Price } from \"@uniswap/sdk-core\";\nimport ConfirmCancellationModal from \"../ConfirmCancellationModal\";\nimport { useTradeExactIn } from \"../../../hooks/useTrade\";\nimport { Dots } from \"../../order/styleds\";\nimport { Rate } from \"../../../state/gstoplimit/actions\";\nimport { isEthereumChain } from \"@gelatonetwork/limit-orders-lib/dist/utils\";\nimport { useWeb3 } from \"../../../web3\";\nimport { ButtonGray } from \"../../Button\";\nimport { useIsTransactionPending } from \"../../../state/gtransactions/hooks\";\nimport {\n  ExplorerDataType,\n  getExplorerLink,\n} from \"../../../utils/getExplorerLink\";\nimport TradePrice from \"../../order/TradePrice\";\nimport useGelatoStopLimitOrdersLib from \"../../../hooks/gelato/useGelatoStopLimitOrdersLib\";\nimport useGasOverhead from \"../../../hooks/useGasOverhead\";\nimport { MouseoverTooltip } from \"../../Tooltip\";\nimport { TYPE } from \"../../../theme\";\nimport HoverInlineText from \"../../HoverInlineText\";\nimport { formatUnits } from \"@ethersproject/units\";\n\nconst handleColorType = (status: string, theme: DefaultTheme) => {\n  switch (status) {\n    case \"open\":\n      return theme.blue1;\n    case \"executed\":\n      return theme.green1;\n    case \"cancelled\":\n      return theme.red1;\n\n    case \"pending\":\n      return theme.yellow1;\n\n    default:\n      return theme.text3;\n  }\n};\n\nconst OrderPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: \"16px\";\n  background-color: ${() => \"transparent\"};\n  z-index: 1;\n  width: \"100%\";\n`;\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: ${({ hideInput }) => (hideInput ? \"16px\" : \"20px\")};\n  border: 1px solid ${\" transparent\"};\n  background-color: ${({ theme }) => theme.bg1};\n  width: ${({ hideInput }) => (hideInput ? \"100%\" : \"initial\")};\n  :focus,\n  :hover {\n    border: 1px solid\n      ${({ theme, hideInput }) => (hideInput ? \" transparent\" : theme.bg3)};\n  }\n`;\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0 1rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.text2)};\n  }\n`;\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst StyledTokenName = styled.span<{ active?: boolean }>`\n  ${({ active }) =>\n    active\n      ? \"  margin: 0 0.25rem 0 0.25rem;\"\n      : \"  margin: 0 0.25rem 0 0.25rem;\"}\n  font-size:  ${({ active }) => (active ? \"14px\" : \"14px\")};\n`;\n\nconst OrderRow = styled(LabelRow)`\n  justify-content: flex-end;\n  margin-top: -8px;\n`;\n\nconst OrderStatus = styled.span<{ status: string; clickable: boolean }>`\n  font-size: 0.825rem;\n  font-weight: 600;\n  padding: 0.5rem;\n  border-radius: 8px;\n  cursor: ${({ clickable }) => (clickable ? \"pointer\" : \"default\")};\n  color: ${({ status, theme }) => handleColorType(status, theme)};\n  border: 1px solid ${({ status, theme }) => handleColorType(status, theme)};\n  width: fit-content;\n  justify-self: flex-end;\n  text-transform: uppercase;\n  :hover {\n    content: \"Reply!\";\n    border: 1px solid\n      ${({ status, theme, clickable }) =>\n        clickable\n          ? handleColorType(\"cancelled\", theme)\n          : handleColorType(status, theme)};\n\n    color: ${({ status, theme, clickable }) =>\n      clickable\n        ? handleColorType(\"cancelled\", theme)\n        : handleColorType(status, theme)};\n  }\n`;\n\nexport const ArrowWrapper = styled.div`\n  padding: 4px;\n  border-radius: 12px;\n  height: 32px;\n  width: 32px;\n  margin-right: 2px;\n  margin-left: -10px;\n  background-color: ${({ theme }) => theme.bg1};\n  border: 4px solid ${({ theme }) => theme.bg1};\n`;\n\nconst CurrencySelect = styled(ButtonGray)<{\n  selected: boolean;\n  hideInput?: boolean;\n}>`\n  align-items: center;\n  font-size: 24px;\n  font-weight: 500;\n  background-color: ${({ selected, theme }) =>\n    selected ? theme.bg0 : theme.primary1};\n  color: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n  border-radius: 16px;\n  box-shadow: ${({ selected }) =>\n    selected ? \"none\" : \"0px 6px 10px rgba(0, 0, 0, 0.075)\"};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  outline: none;\n  cursor: default;\n  user-select: none;\n  border: none;\n  height: ${({ hideInput }) => (hideInput ? \"2.8rem\" : \"2.4rem\")};\n  width: ${({ hideInput }) => (hideInput ? \"100%\" : \"initial\")};\n  padding: 0 8px;\n  justify-content: space-between;\n  margin-right: ${({ hideInput }) => (hideInput ? \"0\" : \"12px\")};\n  &:focus {\n    box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n    background-color: ${({ selected, theme }) =>\n      selected ? theme.bg0 : theme.primary1};\n  }\n  :hover {\n    background-color: ${({ selected, theme }) =>\n      selected ? theme.bg0 : theme.primary1};\n  }\n`;\n\nconst Spacer = styled.div`\n  flex: 1 1 auto;\n`;\n\nexport default function OrderCard({ order }: { order: StopLimitOrder }) {\n  const theme = useTheme();\n\n  const { chainId, handler } = useWeb3();\n\n  const [\n    showExecutionPriceInverted,\n    setShowExecutionPriceInverted,\n  ] = useState<boolean>(false);\n  const [\n    showEthereumExecutionPriceInverted,\n    setShowEthereumExecutionPriceInverted,\n  ] = useState<boolean>(true);\n  const [\n    showCurrentPriceInverted,\n    setShowCurrentPriceInverted,\n  ] = useState<boolean>(true);\n\n  const {\n    handleStopLimitOrderCancellation,\n  } = useGelatoStopLimitOrdersHandlers();\n\n  const gelatoLibrary = useGelatoStopLimitOrdersLib();\n\n  const inputToken = useCurrency(order.inputToken);\n  const outputToken = useCurrency(order.outputToken);\n\n  const inputAmount = useMemo(\n    () =>\n      inputToken && order.inputAmount\n        ? CurrencyAmount.fromRawAmount(inputToken, order.inputAmount)\n        : undefined,\n    [inputToken, order.inputAmount]\n  );\n\n  const isEthereum = isEthereumChain(chainId ?? 1);\n\n  const rawMinReturn = useMemo(() => order.minReturn, [\n    chainId,\n    gelatoLibrary,\n    order.minReturn,\n    isEthereum,\n  ]);\n\n  const rawMaxReturn = useMemo(\n    () =>\n      order.adjustedMinReturn\n        ? order.adjustedMinReturn\n        : gelatoLibrary && chainId && order.maxReturn\n        ? isEthereum\n          ? order.maxReturn\n          : gelatoLibrary.getAdjustedMinReturn(order.maxReturn)\n        : undefined,\n    [\n      chainId,\n      gelatoLibrary,\n      order.maxReturn,\n      order.adjustedMinReturn,\n      isEthereum,\n    ]\n  );\n\n  const maxOutputAmount = useMemo(\n    () =>\n      outputToken && rawMaxReturn\n        ? CurrencyAmount.fromRawAmount(outputToken, rawMaxReturn)\n        : undefined,\n    [outputToken, rawMaxReturn]\n  );\n\n  const outputAmount = useMemo(\n    () =>\n      outputToken && rawMinReturn\n        ? CurrencyAmount.fromRawAmount(outputToken, rawMinReturn)\n        : undefined,\n    [outputToken, rawMinReturn]\n  );\n\n  const {\n    gasPrice,\n    realExecutionPrice: ethereumExecutionPrice,\n  } = useGasOverhead(inputAmount, outputAmount, Rate.MUL);\n\n  const executionPrice = useMemo(\n    () =>\n      outputAmount && outputAmount.greaterThan(0) && inputAmount\n        ? new Price({\n            baseAmount: outputAmount,\n            quoteAmount: inputAmount,\n          })\n        : undefined,\n    [inputAmount, outputAmount]\n  );\n\n  const maxPrice = useMemo(\n    () =>\n      maxOutputAmount && maxOutputAmount.greaterThan(0) && inputAmount\n        ? new Price({\n            baseAmount: maxOutputAmount,\n            quoteAmount: inputAmount,\n          })\n        : undefined,\n    [inputAmount, maxOutputAmount]\n  );\n\n  const trade = useTradeExactIn(inputAmount, outputToken ?? undefined, handler);\n\n  const isSubmissionPending = useIsTransactionPending(order.createdTxHash);\n  const isCancellationPending = useIsTransactionPending(\n    order.cancelledTxHash ?? undefined\n  );\n\n  // modal and loading\n  const [\n    { showConfirm, cancellationErrorMessage, attemptingTxn, txHash },\n    setCancellationState,\n  ] = useState<{\n    showConfirm: boolean;\n    attemptingTxn: boolean;\n    cancellationErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    attemptingTxn: false,\n    cancellationErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const handleConfirmDismiss = useCallback(() => {\n    setCancellationState({\n      showConfirm: false,\n      attemptingTxn,\n      cancellationErrorMessage,\n      txHash,\n    });\n  }, [attemptingTxn, cancellationErrorMessage, txHash]);\n\n  const handleCancellation = useCallback(() => {\n    if (!handleStopLimitOrderCancellation) {\n      return;\n    }\n\n    setCancellationState({\n      attemptingTxn: true,\n      showConfirm,\n      cancellationErrorMessage: undefined,\n      txHash: undefined,\n    });\n\n    const orderDetails =\n      inputToken?.symbol && outputToken?.symbol && inputAmount && outputAmount\n        ? {\n            inputTokenSymbol: inputToken.symbol,\n            outputTokenSymbol: outputToken.symbol,\n            inputAmount: inputAmount.toSignificant(4),\n            outputAmount: outputAmount.toSignificant(4),\n            maxOutputAmount: maxOutputAmount?.toSignificant(4),\n          }\n        : undefined;\n\n    handleStopLimitOrderCancellation(order, orderDetails)\n      .then(({ hash }) => {\n        setCancellationState({\n          attemptingTxn: false,\n          showConfirm,\n          cancellationErrorMessage: undefined,\n          txHash: hash,\n        });\n      })\n      .catch((error) => {\n        setCancellationState({\n          attemptingTxn: false,\n          showConfirm,\n          cancellationErrorMessage: error.message,\n          txHash: undefined,\n        });\n      });\n  }, [\n    handleStopLimitOrderCancellation,\n    showConfirm,\n    inputToken,\n    outputToken,\n    inputAmount,\n    outputAmount,\n    order,\n  ]);\n\n  const OrderCard = ({\n    showStatusButton = true,\n  }: {\n    showStatusButton?: boolean;\n  }) => (\n    <OrderPanel>\n      <Container hideInput={true}>\n        <RowBetween padding=\"10px\">\n          {inputToken ? (\n            <CurrencySelect selected={true}>\n              <Aligner>\n                <CurrencyLogo\n                  currency={inputToken ?? undefined}\n                  size={\"18px\"}\n                />\n                <StyledTokenName>\n                  {inputToken?.name ?? <Dots />}\n                </StyledTokenName>\n              </Aligner>\n            </CurrencySelect>\n          ) : (\n            <Dots />\n          )}\n          <ArrowWrapper>\n            <ArrowRight size=\"16\" color={theme.text1} />\n          </ArrowWrapper>\n          {outputToken ? (\n            <CurrencySelect selected={true}>\n              <Aligner>\n                <CurrencyLogo\n                  currency={outputToken ?? undefined}\n                  size={\"18px\"}\n                />\n                <StyledTokenName>\n                  {outputToken.name ?? <Dots />}\n                </StyledTokenName>\n              </Aligner>\n            </CurrencySelect>\n          ) : (\n            <Dots />\n          )}\n          <Spacer />\n          {showStatusButton ? (\n            <OrderStatus\n              clickable={true}\n              onClick={() => {\n                if (!chainId) return;\n\n                if (order.status === \"open\" && !isSubmissionPending)\n                  setCancellationState({\n                    attemptingTxn: false,\n                    cancellationErrorMessage: undefined,\n                    showConfirm: true,\n                    txHash: undefined,\n                  });\n                else if (order.status === \"open\" && isSubmissionPending)\n                  window.open(\n                    getExplorerLink(\n                      chainId,\n                      order.createdTxHash,\n                      ExplorerDataType.TRANSACTION\n                    ),\n                    \"_blank\"\n                  );\n                else if (order.status === \"cancelled\" && order.cancelledTxHash)\n                  window.open(\n                    getExplorerLink(\n                      chainId,\n                      order.cancelledTxHash,\n                      ExplorerDataType.TRANSACTION\n                    ),\n                    \"_blank\"\n                  );\n                else if (order.status === \"executed\" && order.executedTxHash)\n                  window.open(\n                    getExplorerLink(\n                      chainId,\n                      order.executedTxHash,\n                      ExplorerDataType.TRANSACTION\n                    ),\n                    \"_blank\"\n                  );\n              }}\n              status={\n                isCancellationPending || isSubmissionPending\n                  ? \"pending\"\n                  : order.status\n              }\n            >\n              {isSubmissionPending\n                ? \"pending\"\n                : isCancellationPending\n                ? \"cancelling\"\n                : order.status === \"open\"\n                ? \"cancel\"\n                : order.status}\n              {isSubmissionPending || isCancellationPending ? <Dots /> : null}\n            </OrderStatus>\n          ) : null}\n        </RowBetween>\n\n        <Aligner style={{ marginTop: \"10px\" }}>\n          <OrderRow>\n            <RowBetween>\n              <Text fontWeight={500} fontSize={14} color={theme.text1}>\n                {`Stop Limit trigger price at ${\n                  inputAmount ? inputAmount.toSignificant(4) : \"-\"\n                } ${inputAmount?.currency.symbol ?? \"\"} for ${\n                  maxOutputAmount ? maxOutputAmount?.toSignificant(4) : \"-\"\n                } ${maxOutputAmount?.currency.symbol ?? \"\"}`}\n              </Text>\n            </RowBetween>\n          </OrderRow>\n        </Aligner>\n        <Aligner\n          style={{\n            marginTop: \"-2px\",\n            marginBottom: order.status === \"open\" ? \"1px\" : \"20px\",\n          }}\n        >\n          <OrderRow>\n            <RowBetween>\n              <Text\n                fontWeight={400}\n                fontSize={12}\n                color={theme.text1}\n                style={{ marginRight: \"4px\", marginTop: \"2px\" }}\n              >\n                Current price:\n              </Text>\n              {trade ? (\n                <TradePrice\n                  price={trade.executionPrice}\n                  showInverted={showCurrentPriceInverted}\n                  setShowInverted={setShowCurrentPriceInverted}\n                  fontWeight={500}\n                  fontSize={12}\n                />\n              ) : (\n                <Dots />\n              )}\n            </RowBetween>\n          </OrderRow>\n        </Aligner>\n\n        {order.status === \"open\" ? (\n          <>\n            <Aligner style={{ marginTop: \"-10px\" }}>\n              <OrderRow>\n                <RowBetween>\n                  <Text\n                    fontWeight={400}\n                    fontSize={12}\n                    color={theme.text1}\n                    style={{ marginRight: \"4px\", marginTop: \"2px\" }}\n                  >\n                    Maximum Execution price:\n                  </Text>\n                  {maxPrice ? (\n                    <TradePrice\n                      price={maxPrice}\n                      showInverted={showExecutionPriceInverted}\n                      setShowInverted={setShowExecutionPriceInverted}\n                      fontWeight={500}\n                      fontSize={12}\n                    />\n                  ) : (\n                    <Dots />\n                  )}\n                </RowBetween>\n              </OrderRow>\n            </Aligner>\n            <Aligner style={{ marginTop: \"-10px\" }}>\n              <OrderRow>\n                <RowBetween>\n                  <Text\n                    fontWeight={400}\n                    fontSize={12}\n                    color={theme.text1}\n                    style={{ marginRight: \"4px\", marginTop: \"2px\" }}\n                  >\n                    Minimum Execution price:\n                  </Text>\n                  {executionPrice ? (\n                    isEthereum ? (\n                      <>\n                        <MouseoverTooltip\n                          text={`The execution price takes into account the gas necessary to execute your order and guarantees that your desired rate is fulfilled, so that the minimum you receive is ${\n                            outputAmount ? outputAmount.toSignificant(4) : \"-\"\n                          } ${\n                            outputAmount?.currency.symbol ?? \"\"\n                          }. It fluctuates according to gas prices. Current gas price: ${parseFloat(\n                            gasPrice ? formatUnits(gasPrice, \"gwei\") : \"-\"\n                          ).toFixed(0)} GWEI.`}\n                        >\n                          {ethereumExecutionPrice ? (\n                            <TradePrice\n                              price={ethereumExecutionPrice}\n                              showInverted={showEthereumExecutionPriceInverted}\n                              setShowInverted={\n                                setShowEthereumExecutionPriceInverted\n                              }\n                              fontWeight={500}\n                              fontSize={12}\n                            />\n                          ) : ethereumExecutionPrice === undefined ? (\n                            <TYPE.body fontSize={14} color={theme.text2}>\n                              <HoverInlineText text={\"never executes\"} />\n                            </TYPE.body>\n                          ) : (\n                            <Dots />\n                          )}\n                        </MouseoverTooltip>\n                      </>\n                    ) : (\n                      <TradePrice\n                        price={executionPrice}\n                        showInverted={showExecutionPriceInverted}\n                        setShowInverted={setShowExecutionPriceInverted}\n                        fontWeight={500}\n                        fontSize={12}\n                      />\n                    )\n                  ) : (\n                    <Dots />\n                  )}\n                </RowBetween>\n              </OrderRow>\n            </Aligner>\n          </>\n        ) : null}\n      </Container>\n    </OrderPanel>\n  );\n\n  return (\n    <>\n      <ConfirmCancellationModal\n        isOpen={showConfirm}\n        attemptingTxn={attemptingTxn}\n        txHash={txHash}\n        onConfirm={handleCancellation}\n        swapErrorMessage={cancellationErrorMessage}\n        onDismiss={handleConfirmDismiss}\n        topContent={() => (\n          <>\n            <br />\n            <OrderCard showStatusButton={false} />\n          </>\n        )}\n      />\n      <OrderCard />\n    </>\n  );\n}\n","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/StopLimitOrdersHistory/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Toggle/ListToggle.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Toggle/MultiToggle.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Toggle/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/TokenWarningModal/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/Tooltip/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/TransactionConfirmationModal/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/AdvancedSwapDetails.tsx",["662","663"],"/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { GelatoStopLimitOrders, utils } from \"@gelatonetwork/limit-orders-lib\";\nimport { isEthereumChain } from \"@gelatonetwork/limit-orders-lib/dist/utils\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport React, { useMemo } from \"react\";\nimport { useGelatoStopLimitOrders } from \"../../hooks/gelato\";\nimport useGelatoStopLimitOrdersLib from \"../../hooks/gelato/useGelatoStopLimitOrdersLib\";\nimport useGasOverhead from \"../../hooks/useGasOverhead\";\nimport useTheme from \"../../hooks/useTheme\";\nimport { Rate } from \"../../state/gstoplimit/actions\";\nimport { TYPE } from \"../../theme\";\nimport { useWeb3 } from \"../../web3\";\nimport { AutoColumn } from \"../Column\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport { MouseoverTooltip } from \"../Tooltip\";\n\nexport function AdvancedSwapDetails() {\n  const theme = useTheme();\n  const { chainId } = useWeb3();\n  const {\n    derivedOrderInfo: { parsedAmounts, rawAmounts, slippage },\n    orderState: { rateType },\n  } = useGelatoStopLimitOrders();\n\n  const library = useGelatoStopLimitOrdersLib();\n\n  const { gasPrice, realExecutionPriceAsString } = useGasOverhead(\n    parsedAmounts.input,\n    parsedAmounts.output,\n    rateType\n  );\n\n  const isInvertedRate = rateType === Rate.DIV;\n\n  const realExecutionRateWithSymbols = useMemo(\n    () =>\n      parsedAmounts.input?.currency &&\n      parsedAmounts.output?.currency &&\n      realExecutionPriceAsString\n        ? realExecutionPriceAsString === \"never executes\"\n          ? realExecutionPriceAsString\n          : `1 ${\n              isInvertedRate\n                ? parsedAmounts.output.currency.symbol\n                : parsedAmounts.input.currency.symbol\n            } = ${realExecutionPriceAsString} ${\n              isInvertedRate\n                ? parsedAmounts.input.currency.symbol\n                : parsedAmounts.output.currency.symbol\n            }`\n        : undefined,\n    [parsedAmounts, realExecutionPriceAsString, isInvertedRate]\n  );\n\n  const outputAmount = parsedAmounts.output;\n\n  const rawOutputAmount = rawAmounts.output ?? \"0\";\n\n  const { minReturn, slippagePercentage, gelatoFeePercentage } = useMemo(() => {\n    if (!outputAmount || !library || !chainId)\n      return {\n        minReturn: undefined,\n        slippagePercentage: undefined,\n        gelatoFeePercentage: undefined,\n      };\n\n    // if (utils.isEthereumChain(chainId))\n    //   return {\n    //     minReturn: outputAmount,\n    //     slippagePercentage: undefined,\n    //     gelatoFeePercentage: undefined,\n    //   };\n\n    const { minReturn } = library.getFeeAndSlippageAdjustedMinReturn(\n      rawOutputAmount,\n      slippage\n    );\n\n    const slippagePercentage = slippage / 100;\n    const gelatoFeePercentage = GelatoStopLimitOrders.gelatoFeeBPS / 100;\n\n    const minReturnParsed = CurrencyAmount.fromRawAmount(\n      outputAmount.currency,\n      minReturn\n    );\n\n    return {\n      minReturn: minReturnParsed,\n      slippagePercentage,\n      gelatoFeePercentage,\n    };\n  }, [outputAmount, chainId, library, rawOutputAmount]);\n\n  return !chainId ? null : (\n    <AutoColumn gap=\"8px\">\n      {!isEthereumChain(chainId) ? (\n        <>\n          <RowBetween>\n            <RowFixed>\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n                Gelato Fee\n              </TYPE.black>\n            </RowFixed>\n            <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n              {gelatoFeePercentage ? `${gelatoFeePercentage}` : \"-\"}%\n            </TYPE.black>\n          </RowBetween>\n\n          <RowBetween>\n            <RowFixed>\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n                Slippage\n              </TYPE.black>\n            </RowFixed>\n            <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n              {slippagePercentage ? `${slippagePercentage}` : \"-\"}%\n            </TYPE.black>\n          </RowBetween>\n        </>\n      ) : (\n        <>\n          <RowBetween>\n            <RowFixed>\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n                Gas Price\n              </TYPE.black>\n            </RowFixed>\n            <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n              {gasPrice\n                ? `${parseFloat(formatUnits(gasPrice, \"gwei\")).toFixed(0)} GWEI`\n                : \"-\"}\n            </TYPE.black>\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <MouseoverTooltip\n                text={`The actual execution price. Takes into account the gas necessary to execute your order and guarantees that your desired rate is fulfilled. It fluctuates according to gas prices. ${\n                  realExecutionRateWithSymbols\n                    ? `Assuming current gas price it should execute when ` +\n                      realExecutionRateWithSymbols +\n                      \".\"\n                    : \"\"\n                }`}\n              >\n                <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n                  Real Execution Price (?)\n                </TYPE.black>{\" \"}\n              </MouseoverTooltip>\n            </RowFixed>\n            <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n              {realExecutionRateWithSymbols\n                ? `${realExecutionRateWithSymbols}`\n                : \"-\"}\n            </TYPE.black>\n          </RowBetween>\n        </>\n      )}\n\n      <RowBetween>\n        <RowFixed>\n          <MouseoverTooltip\n            text={`The minimum amount you can receive. It includes all fees and maximum slippage tolerance.`}\n          >\n            <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n              Minimum Received (?)\n            </TYPE.black>\n          </MouseoverTooltip>\n        </RowFixed>\n        <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n          {minReturn\n            ? `${minReturn.toSignificant(4)} ${\n                outputAmount ? outputAmount.currency.symbol : \"-\"\n              }`\n            : \"-\"}\n        </TYPE.black>\n      </RowBetween>\n    </AutoColumn>\n  );\n}\n","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/ConfirmSwapModal.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/FormattedPriceImpact.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/Slippage.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/SwapHeader.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/SwapModalFooter.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/SwapModalHeader.tsx",["664"],"import { Currency, TradeType } from \"@uniswap/sdk-core\";\nimport { Trade } from \"@uniswap/v2-sdk\";\nimport React, { useState, useEffect } from \"react\";\nimport { ArrowDown, AlertTriangle } from \"react-feather\";\nimport { Text } from \"rebass\";\nimport styled from \"styled-components\";\nimport { useUSDCValue } from \"../../hooks/useUSDCPrice\";\nimport { TYPE } from \"../../theme\";\nimport { ButtonPrimary } from \"../Button\";\nimport { isAddress, shortenAddress } from \"../../utils\";\nimport { computeFiatValuePriceImpact } from \"../../utils/computeFiatValuePriceImpact\";\nimport { AutoColumn } from \"../Column\";\nimport { FiatValue } from \"../CurrencyInputPanel/FiatValue\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport { TruncatedText, SwapShowAcceptChanges } from \"./styleds\";\nimport { AdvancedSwapDetails } from \"./AdvancedSwapDetails\";\nimport { LightCard } from \"../Card\";\nimport { DarkGreyCard } from \"../Card\";\nimport TradePrice from \"../order/TradePrice\";\nimport useTheme from \"../../hooks/useTheme\";\nimport { useGelatoStopLimitOrders } from \"../../hooks/gelato\";\n\nexport const ArrowWrapper = styled.div`\n  padding: 4px;\n  border-radius: 12px;\n  height: 32px;\n  width: 32px;\n  position: relative;\n  margin-top: -18px;\n  margin-bottom: -18px;\n  left: calc(50% - 16px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 2;\n`;\n\nexport default function SwapModalHeader({\n  trade,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade?: Trade<Currency, Currency, TradeType>;\n  recipient: string | null;\n  showAcceptChanges: boolean;\n  onAcceptChanges: () => void;\n}) {\n  const theme = useTheme();\n\n  const [showInverted, setShowInverted] = useState<boolean>(false);\n\n  const {\n    derivedOrderInfo: { price, parsedAmounts },\n  } = useGelatoStopLimitOrders();\n\n  const inputAmount = parsedAmounts.input;\n  const outputAmount = parsedAmounts.output;\n\n  const fiatValueInput = useUSDCValue(inputAmount);\n  const fiatValueOutput = useUSDCValue(outputAmount);\n\n  if (!inputAmount || !outputAmount) return null;\n\n  return (\n    <AutoColumn gap={\"4px\"} style={{ marginTop: \"1rem\" }}>\n      <DarkGreyCard padding=\"0.75rem 1rem\">\n        <AutoColumn gap={\"8px\"}>\n          <RowBetween>\n            <TYPE.body color={theme.text3} fontWeight={500} fontSize={14}>\n              From\n            </TYPE.body>\n            <FiatValue fiatValue={fiatValueInput} />\n          </RowBetween>\n          <RowBetween align=\"center\">\n            <RowFixed gap={\"0px\"}>\n              <CurrencyLogo\n                currency={inputAmount.currency}\n                size={\"20px\"}\n                style={{ marginRight: \"12px\" }}\n              />\n              <Text fontSize={20} fontWeight={500}>\n                {inputAmount.currency.symbol}\n              </Text>\n            </RowFixed>\n            <RowFixed gap={\"0px\"}>\n              <TruncatedText\n                fontSize={24}\n                fontWeight={500}\n                color={\n                  showAcceptChanges &&\n                  trade?.tradeType === TradeType.EXACT_OUTPUT\n                    ? theme.primary1\n                    : \"\"\n                }\n              >\n                {inputAmount.toSignificant(6)}\n              </TruncatedText>\n            </RowFixed>\n          </RowBetween>\n        </AutoColumn>\n      </DarkGreyCard>\n      <ArrowWrapper>\n        <ArrowDown size=\"16\" color={theme.text2} />\n      </ArrowWrapper>\n      <DarkGreyCard padding=\"0.75rem 1rem\" style={{ marginBottom: \"0.25rem\" }}>\n        <AutoColumn gap={\"8px\"}>\n          <RowBetween>\n            <TYPE.body color={theme.text3} fontWeight={500} fontSize={14}>\n              To\n            </TYPE.body>\n            <TYPE.body fontSize={14} color={theme.text3}>\n              <FiatValue\n                fiatValue={fiatValueOutput}\n                priceImpact={computeFiatValuePriceImpact(\n                  fiatValueInput,\n                  fiatValueOutput\n                )}\n              />\n            </TYPE.body>\n          </RowBetween>\n          <RowBetween align=\"flex-end\">\n            <RowFixed gap={\"0px\"}>\n              <CurrencyLogo\n                currency={outputAmount.currency}\n                size={\"20px\"}\n                style={{ marginRight: \"12px\" }}\n              />\n              <Text fontSize={20} fontWeight={500}>\n                {outputAmount.currency.symbol}\n              </Text>\n            </RowFixed>\n            <RowFixed gap={\"0px\"}>\n              <TruncatedText fontSize={24} fontWeight={500}>\n                {outputAmount.toSignificant(6)}\n              </TruncatedText>\n            </RowFixed>\n          </RowBetween>\n        </AutoColumn>\n      </DarkGreyCard>\n      <RowBetween style={{ marginTop: \"0.25rem\", padding: \"0 1rem\" }}>\n        <TYPE.body color={theme.text2} fontWeight={500} fontSize={14}>\n          {\"Limit Price:\"}\n        </TYPE.body>\n        <TradePrice\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          price={price!}\n          showInverted={showInverted}\n          setShowInverted={setShowInverted}\n        />\n      </RowBetween>\n\n      <LightCard style={{ padding: \".75rem\", marginTop: \"0.5rem\" }}>\n        <AdvancedSwapDetails />\n      </LightCard>\n\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap={\"0px\"}>\n          <RowBetween>\n            <RowFixed>\n              <AlertTriangle\n                size={20}\n                style={{ marginRight: \"8px\", minWidth: 24 }}\n              />\n              <TYPE.main color={theme.primary1}> Price Updated</TYPE.main>\n            </RowFixed>\n            <ButtonPrimary\n              style={{\n                padding: \".5rem\",\n                width: \"fit-content\",\n                fontSize: \"0.825rem\",\n                borderRadius: \"12px\",\n              }}\n              onClick={onAcceptChanges}\n            >\n              Accept\n            </ButtonPrimary>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n\n      {/* <AutoColumn\n        justify=\"flex-start\"\n        gap=\"sm\"\n        style={{ padding: \".75rem 1rem\" }}\n      >\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <TYPE.italic\n            fontWeight={400}\n            textAlign=\"left\"\n            style={{ width: \"100%\" }}\n          >\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {trade.minimumAmountOut(allowedSlippage).toSignificant(6)}{\" \"}\n              {outputAmount.currency.symbol}\n            </b>\n            {\" or the transaction will revert.\"}\n          </TYPE.italic>\n        ) : (\n          <TYPE.italic\n            fontWeight={400}\n            textAlign=\"left\"\n            style={{ width: \"100%\" }}\n          >\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {trade.maximumAmountIn(allowedSlippage).toSignificant(6)}{\" \"}\n              {inputAmount.currency.symbol}\n            </b>\n            {\" or the transaction will revert.\"}\n          </TYPE.italic>\n        )}\n      </AutoColumn> */}\n      {recipient !== null ? (\n        <AutoColumn\n          justify=\"center\"\n          gap=\"sm\"\n          style={{ padding: \"12px 0 0 0px\" }}\n        >\n          <TYPE.main>\n            Output will be sent to{\" \"}\n            <b title={recipient}>\n              {isAddress(recipient) ? shortenAddress(recipient) : recipient}\n            </b>\n          </TYPE.main>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  );\n}\n","/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/SwapRoute.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/TradePrice.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/UnsupportedCurrencyFooter.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/confirmPriceImpactWithoutFee.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/components/order/styleds.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/addresses.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/index.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/lists.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/misc.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/routing.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.avax.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.bsc.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.fantom.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.matic.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/constants/tokens.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/custom.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/entities/errors.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/entities/pair.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/Balances.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/Tokens.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/index.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrders.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersHandlers.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersHistory.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersLib.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useAllCurrencyCombinations.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useApproveCallback.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useColor.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useContract.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useDebounce.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useDebouncedChangeHandler.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useFetchListCallback.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useGasOverhead.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useGasPrice.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useHttpLocations.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useInterval.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useIsArgentWallet.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useIsSwapUnsupported.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useIsWindowVisible.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useLast.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useOnClickOutside.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/usePairs.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/usePrevious.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useTheme.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useToggle.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useTokenAllowance.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useTrade.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useUSDCPrice.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/hooks/useWindowSize.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gapplication/actions.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gapplication/hooks.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gapplication/reducer.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gapplication/updater.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/actions.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/hooks.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/reducer.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/updater.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/glists/wrappedTokenInfo.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gmulticall/actions.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gmulticall/hooks.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gmulticall/reducer.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gmulticall/updater.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gstoplimit/actions.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gstoplimit/hooks.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gstoplimit/reducer.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gtransactions/actions.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gtransactions/hooks.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gtransactions/reducer.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/gtransactions/updater.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/guser/actions.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/guser/hooks.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/guser/reducer.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/state/index.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/theme/components.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/theme/index.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/theme/styled.d.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/types/index.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/chunkArray.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/computeFiatValuePriceImpact.tsx",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/constructSameAddressMap.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/contenthashToUri.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/currencyId.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/formatTokenAmount.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/getExplorerLink.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/getTokenList.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/index.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/isTradeBetter.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/isZero.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/listVersionLabel.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/localStorageOrders.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/maxAmountSpend.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/pairs.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/parseENSAddress.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/prices.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/resolveENSContentHash.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/retry.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/supportedChainId.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/unwrappedToken.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/utils/uriToHttp.ts",[],"/Users/harrytrippel/Desktop/gelato/swap-orders-lib/packages/stop-limit-orders-react/src/web3/index.tsx",[],{"ruleId":"665","severity":1,"message":"666","line":295,"column":6,"nodeType":"667","endLine":306,"endColumn":4,"suggestions":"668"},{"ruleId":"665","severity":1,"message":"669","line":383,"column":6,"nodeType":"667","endLine":383,"endColumn":8,"suggestions":"670"},{"ruleId":"665","severity":1,"message":"671","line":216,"column":55,"nodeType":"667","endLine":221,"endColumn":4,"suggestions":"672"},{"ruleId":"665","severity":1,"message":"673","line":356,"column":6,"nodeType":"667","endLine":364,"endColumn":4,"suggestions":"674"},{"ruleId":"675","severity":1,"message":"676","line":2,"column":33,"nodeType":"677","messageId":"678","endLine":2,"endColumn":38},{"ruleId":"665","severity":1,"message":"679","line":93,"column":6,"nodeType":"667","endLine":93,"endColumn":55,"suggestions":"680"},{"ruleId":"675","severity":1,"message":"681","line":3,"column":27,"nodeType":"677","messageId":"678","endLine":3,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'slippage'. Either include it or remove the dependency array.","ArrayExpression",["682"],"React Hook useEffect has a missing dependency: 'handleSlippageInput'. Either include it or remove the dependency array.",["683"],"React Hook useMemo has unnecessary dependencies: 'chainId', 'gelatoLibrary', and 'isEthereum'. Either exclude them or remove the dependency array.",["684"],"React Hook useCallback has a missing dependency: 'maxOutputAmount'. Either include it or remove the dependency array.",["685"],"@typescript-eslint/no-unused-vars","'utils' is defined but never used.","Identifier","unusedVar","React Hook useMemo has a missing dependency: 'slippage'. Either include it or remove the dependency array.",["686"],"'useEffect' is defined but never used.",{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},"Update the dependencies array to be: [handleStopLimitOrderSubmission, tradeToConfirm, showConfirm, currencies.input?.wrapped.address, currencies.input?.isNative, currencies.output?.wrapped.address, currencies.output?.isNative, rawAmounts.input, rawAmounts.output, account, slippage]",{"range":"697","text":"698"},"Update the dependencies array to be: [handleSlippageInput]",{"range":"699","text":"700"},"Update the dependencies array to be: [order.minReturn]",{"range":"701","text":"702"},"Update the dependencies array to be: [handleStopLimitOrderCancellation, showConfirm, inputToken.symbol, outputToken.symbol, inputAmount, outputAmount, maxOutputAmount, order]",{"range":"703","text":"704"},"Update the dependencies array to be: [outputAmount, library, chainId, rawOutputAmount, slippage]",{"range":"705","text":"706"},[8016,8296],"[handleStopLimitOrderSubmission, tradeToConfirm, showConfirm, currencies.input?.wrapped.address, currencies.input?.isNative, currencies.output?.wrapped.address, currencies.output?.isNative, rawAmounts.input, rawAmounts.output, account, slippage]",[10437,10439],"[handleSlippageInput]",[6520,6594],"[order.minReturn]",[10200,10339],"[handleStopLimitOrderCancellation, showConfirm, inputToken.symbol, outputToken.symbol, inputAmount, outputAmount, maxOutputAmount, order]",[3091,3140],"[outputAmount, library, chainId, rawOutputAmount, slippage]"]